{"version":3,"file":"332.0cd426a0.iframe.bundle.js","mappings":";;;;AA4DA;AAKA;AAGA;;;;;;AAMA;AAGA;;;AAGA;;AAGA;;;;;;;;;;;AAcA;ACxFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;AC4QA;AACA;AACA;AACA;;;;;AAKA;;;;;;;AAUA;AACA;AACA;AACA;;;;;;AAMA;;;;AAKA;ACpSA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmFA;;;;;;;;AAcA;;;;;;;;AASA;AC1GA;;;;;;;;;;;;;;;;;;ACuGA;AACA;AACA;AACA;;AAGA;AC7GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;;;;AASA","sources":["webpack://@holochain-open-dev/profiles-dev/./node_modules/@holochain-open-dev/elements/dist/elements/holo-identicon.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.2EORC5ML.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.G7G6UAKI.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.Q4KKZVMX.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.62GDJLTG.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.H4GMEERO.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.WGZQDQP2.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.FIEJKR6H.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.MQ7QFCHP.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.KLGGXJV3.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators.js\";\nimport renderIcon from \"@holo-host/identicon\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { encodeHashToBase64 } from \"@holochain/client\";\nimport { localized, msg } from \"@lit/localize\";\nimport \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.js\";\nimport { hashProperty } from \"../holo-hash-property.js\";\nlet HoloIdenticon = class HoloIdenticon extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Size of the identicon in pixels.\n         */\n        this.size = 32;\n        /**\n         * Shape of the identicon.\n         */\n        this.shape = \"circle\";\n        this.justCopiedHash = false;\n    }\n    async copyHash() {\n        await navigator.clipboard.writeText(this.strHash);\n        if (this.timeout)\n            clearTimeout(this.timeout);\n        this.justCopiedHash = true;\n        this._tooltip.show();\n        this.timeout = setTimeout(() => {\n            this._tooltip.hide();\n            setTimeout(() => {\n                this.justCopiedHash = false;\n            }, 100);\n        }, 2000);\n    }\n    get strHash() {\n        return encodeHashToBase64(this.hash);\n    }\n    updated(changedValues) {\n        super.updated(changedValues);\n        if ((changedValues.has(\"hash\") &&\n            changedValues.get(\"hash\")?.toString() !== this.hash?.toString()) ||\n            changedValues.has(\"size\") ||\n            changedValues.has(\"value\")) {\n            renderIcon({\n                hash: this.hash,\n                size: this.size,\n            }, this._canvas);\n        }\n    }\n    renderCanvas() {\n        return html ` <canvas\n      id=\"canvas\"\n      width=\"1\"\n      height=\"1\"\n      class=${classMap({\n            square: this.shape === \"square\",\n            circle: this.shape === \"circle\",\n        })}\n    ></canvas>`;\n    }\n    render() {\n        return html `<div\n      @click=${() => this.copyHash()}\n      style=\"cursor: pointer; flex-grow: 0\"\n    >\n      <sl-tooltip\n        id=\"tooltip\"\n        placement=\"top\"\n        .content=${this.justCopiedHash\n            ? msg(\"Copied!\")\n            : `${this.strHash.substring(0, 6)}...`}\n        .trigger=${this.justCopiedHash ? \"manual\" : \"hover focus\"}\n        hoist\n      >\n        ${this.renderCanvas()}\n      </sl-tooltip>\n    </div>`;\n    }\n    static get styles() {\n        return css `\n      :host {\n        display: flex;\n      }\n\n      .square {\n        border-radius: 0%;\n      }\n      .circle {\n        border-radius: 50%;\n      }\n    `;\n    }\n};\n__decorate([\n    property(hashProperty(\"hash\"))\n], HoloIdenticon.prototype, \"hash\", void 0);\n__decorate([\n    property({ type: Number })\n], HoloIdenticon.prototype, \"size\", void 0);\n__decorate([\n    property({ type: String })\n], HoloIdenticon.prototype, \"shape\", void 0);\n__decorate([\n    query(\"#canvas\")\n], HoloIdenticon.prototype, \"_canvas\", void 0);\n__decorate([\n    query(\"#tooltip\")\n], HoloIdenticon.prototype, \"_tooltip\", void 0);\n__decorate([\n    state()\n], HoloIdenticon.prototype, \"justCopiedHash\", void 0);\nHoloIdenticon = __decorate([\n    localized(),\n    customElement(\"holo-identicon\")\n], HoloIdenticon);\nexport { HoloIdenticon };\n//# sourceMappingURL=holo-identicon.js.map","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/dropdown/dropdown.styles.ts\nvar dropdown_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    display: inline-block;\n  }\n\n  .dropdown::part(popup) {\n    z-index: var(--sl-z-index-dropdown);\n  }\n\n  .dropdown[data-current-placement^='top']::part(popup) {\n    transform-origin: bottom;\n  }\n\n  .dropdown[data-current-placement^='bottom']::part(popup) {\n    transform-origin: top;\n  }\n\n  .dropdown[data-current-placement^='left']::part(popup) {\n    transform-origin: right;\n  }\n\n  .dropdown[data-current-placement^='right']::part(popup) {\n    transform-origin: left;\n  }\n\n  .dropdown__trigger {\n    display: block;\n  }\n\n  .dropdown__panel {\n    font-family: var(--sl-font-sans);\n    font-size: var(--sl-font-size-medium);\n    font-weight: var(--sl-font-weight-normal);\n    box-shadow: var(--sl-shadow-large);\n    border-radius: var(--sl-border-radius-medium);\n    pointer-events: none;\n  }\n\n  .dropdown--open .dropdown__panel {\n    display: block;\n    pointer-events: all;\n  }\n\n  /* When users slot a menu, make sure it conforms to the popup's auto-size */\n  ::slotted(sl-menu) {\n    max-width: var(--auto-size-available-width) !important;\n    max-height: var(--auto-size-available-height) !important;\n  }\n`;\n\nexport {\n  dropdown_styles_default\n};\n","// src/internal/tabbable.ts\nfunction isTabbable(el) {\n  const tag = el.tagName.toLowerCase();\n  if (el.getAttribute(\"tabindex\") === \"-1\") {\n    return false;\n  }\n  if (el.hasAttribute(\"disabled\")) {\n    return false;\n  }\n  if (el.hasAttribute(\"aria-disabled\") && el.getAttribute(\"aria-disabled\") !== \"false\") {\n    return false;\n  }\n  if (tag === \"input\" && el.getAttribute(\"type\") === \"radio\" && !el.hasAttribute(\"checked\")) {\n    return false;\n  }\n  if (el.offsetParent === null) {\n    return false;\n  }\n  if (window.getComputedStyle(el).visibility === \"hidden\") {\n    return false;\n  }\n  if ((tag === \"audio\" || tag === \"video\") && el.hasAttribute(\"controls\")) {\n    return true;\n  }\n  if (el.hasAttribute(\"tabindex\")) {\n    return true;\n  }\n  if (el.hasAttribute(\"contenteditable\") && el.getAttribute(\"contenteditable\") !== \"false\") {\n    return true;\n  }\n  return [\"button\", \"input\", \"select\", \"textarea\", \"a\", \"audio\", \"video\", \"summary\"].includes(tag);\n}\nfunction getTabbableBoundary(root) {\n  var _a, _b;\n  const allElements = [];\n  function walk(el) {\n    if (el instanceof HTMLElement) {\n      allElements.push(el);\n      if (el.shadowRoot !== null && el.shadowRoot.mode === \"open\") {\n        walk(el.shadowRoot);\n      }\n    }\n    [...el.children].forEach((e) => walk(e));\n  }\n  walk(root);\n  const start = (_a = allElements.find((el) => isTabbable(el))) != null ? _a : null;\n  const end = (_b = allElements.reverse().find((el) => isTabbable(el))) != null ? _b : null;\n  return { start, end };\n}\n\nexport {\n  getTabbableBoundary\n};\n","import {\n  dropdown_styles_default\n} from \"./chunk.2EORC5ML.js\";\nimport {\n  getTabbableBoundary\n} from \"./chunk.G7G6UAKI.js\";\nimport {\n  getAnimation,\n  setDefaultAnimation\n} from \"./chunk.OAQT3AUQ.js\";\nimport {\n  waitForEvent\n} from \"./chunk.B4BZKR24.js\";\nimport {\n  animateTo,\n  stopAnimations\n} from \"./chunk.65AZ2BGN.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  LocalizeController\n} from \"./chunk.Q3I3TA2Y.js\";\nimport {\n  watch\n} from \"./chunk.VQ3XOPCT.js\";\nimport {\n  ShoelaceElement,\n  e,\n  e2,\n  i\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/dropdown/dropdown.ts\nvar SlDropdown = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.localize = new LocalizeController(this);\n    this.open = false;\n    this.placement = \"bottom-start\";\n    this.disabled = false;\n    this.stayOpenOnSelect = false;\n    this.distance = 0;\n    this.skidding = 0;\n    this.hoist = false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.handlePanelSelect = this.handlePanelSelect.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleDocumentKeyDown = this.handleDocumentKeyDown.bind(this);\n    this.handleDocumentMouseDown = this.handleDocumentMouseDown.bind(this);\n    if (!this.containingElement) {\n      this.containingElement = this;\n    }\n  }\n  firstUpdated() {\n    this.panel.hidden = !this.open;\n    if (this.open) {\n      this.addOpenListeners();\n      this.popup.active = true;\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeOpenListeners();\n    this.hide();\n  }\n  focusOnTrigger() {\n    const trigger = this.trigger.assignedElements({ flatten: true })[0];\n    if (typeof (trigger == null ? void 0 : trigger.focus) === \"function\") {\n      trigger.focus();\n    }\n  }\n  getMenu() {\n    return this.panel.assignedElements({ flatten: true }).find((el) => el.tagName.toLowerCase() === \"sl-menu\");\n  }\n  handleKeyDown(event) {\n    if (this.open && event.key === \"Escape\") {\n      event.stopPropagation();\n      this.hide();\n      this.focusOnTrigger();\n    }\n  }\n  handleDocumentKeyDown(event) {\n    var _a;\n    if (event.key === \"Escape\" && this.open) {\n      event.stopPropagation();\n      this.focusOnTrigger();\n      this.hide();\n      return;\n    }\n    if (event.key === \"Tab\") {\n      if (this.open && ((_a = document.activeElement) == null ? void 0 : _a.tagName.toLowerCase()) === \"sl-menu-item\") {\n        event.preventDefault();\n        this.hide();\n        this.focusOnTrigger();\n        return;\n      }\n      setTimeout(() => {\n        var _a2, _b, _c;\n        const activeElement = ((_a2 = this.containingElement) == null ? void 0 : _a2.getRootNode()) instanceof ShadowRoot ? (_c = (_b = document.activeElement) == null ? void 0 : _b.shadowRoot) == null ? void 0 : _c.activeElement : document.activeElement;\n        if (!this.containingElement || (activeElement == null ? void 0 : activeElement.closest(this.containingElement.tagName.toLowerCase())) !== this.containingElement) {\n          this.hide();\n        }\n      });\n    }\n  }\n  handleDocumentMouseDown(event) {\n    const path = event.composedPath();\n    if (this.containingElement && !path.includes(this.containingElement)) {\n      this.hide();\n    }\n  }\n  handlePanelSelect(event) {\n    const target = event.target;\n    if (!this.stayOpenOnSelect && target.tagName.toLowerCase() === \"sl-menu\") {\n      this.hide();\n      this.focusOnTrigger();\n    }\n  }\n  handleTriggerClick() {\n    if (this.open) {\n      this.hide();\n    } else {\n      this.show();\n      this.focusOnTrigger();\n    }\n  }\n  handleTriggerKeyDown(event) {\n    if ([\" \", \"Enter\"].includes(event.key)) {\n      event.preventDefault();\n      this.handleTriggerClick();\n      return;\n    }\n    const menu = this.getMenu();\n    if (menu) {\n      const menuItems = menu.getAllItems();\n      const firstMenuItem = menuItems[0];\n      const lastMenuItem = menuItems[menuItems.length - 1];\n      if ([\"ArrowDown\", \"ArrowUp\", \"Home\", \"End\"].includes(event.key)) {\n        event.preventDefault();\n        if (!this.open) {\n          this.show();\n        }\n        if (menuItems.length > 0) {\n          this.updateComplete.then(() => {\n            if (event.key === \"ArrowDown\" || event.key === \"Home\") {\n              menu.setCurrentItem(firstMenuItem);\n              firstMenuItem.focus();\n            }\n            if (event.key === \"ArrowUp\" || event.key === \"End\") {\n              menu.setCurrentItem(lastMenuItem);\n              lastMenuItem.focus();\n            }\n          });\n        }\n      }\n    }\n  }\n  handleTriggerKeyUp(event) {\n    if (event.key === \" \") {\n      event.preventDefault();\n    }\n  }\n  handleTriggerSlotChange() {\n    this.updateAccessibleTrigger();\n  }\n  //\n  // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and\n  // `aria-expanded`. These must be applied to the \"accessible trigger\" (the tabbable portion of the trigger element\n  // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,\n  // a child of the slotted element, or an element in the slotted element's shadow root.\n  //\n  // For example, the accessible trigger of an <sl-button> is a <button> located inside its shadow root.\n  //\n  // To determine this, we assume the first tabbable element in the trigger slot is the \"accessible trigger.\"\n  //\n  updateAccessibleTrigger() {\n    const assignedElements = this.trigger.assignedElements({ flatten: true });\n    const accessibleTrigger = assignedElements.find((el) => getTabbableBoundary(el).start);\n    let target;\n    if (accessibleTrigger) {\n      switch (accessibleTrigger.tagName.toLowerCase()) {\n        case \"sl-button\":\n        case \"sl-icon-button\":\n          target = accessibleTrigger.button;\n          break;\n        default:\n          target = accessibleTrigger;\n      }\n      target.setAttribute(\"aria-haspopup\", \"true\");\n      target.setAttribute(\"aria-expanded\", this.open ? \"true\" : \"false\");\n    }\n  }\n  /** Shows the dropdown panel. */\n  async show() {\n    if (this.open) {\n      return void 0;\n    }\n    this.open = true;\n    return waitForEvent(this, \"sl-after-show\");\n  }\n  /** Hides the dropdown panel */\n  async hide() {\n    if (!this.open) {\n      return void 0;\n    }\n    this.open = false;\n    return waitForEvent(this, \"sl-after-hide\");\n  }\n  /**\n   * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu\n   * is activated.\n   */\n  reposition() {\n    this.popup.reposition();\n  }\n  addOpenListeners() {\n    this.panel.addEventListener(\"sl-select\", this.handlePanelSelect);\n    this.panel.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n    document.addEventListener(\"mousedown\", this.handleDocumentMouseDown);\n  }\n  removeOpenListeners() {\n    if (this.panel) {\n      this.panel.removeEventListener(\"sl-select\", this.handlePanelSelect);\n      this.panel.removeEventListener(\"keydown\", this.handleKeyDown);\n    }\n    document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n    document.removeEventListener(\"mousedown\", this.handleDocumentMouseDown);\n  }\n  async handleOpenChange() {\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n    this.updateAccessibleTrigger();\n    if (this.open) {\n      this.emit(\"sl-show\");\n      this.addOpenListeners();\n      await stopAnimations(this);\n      this.panel.hidden = false;\n      this.popup.active = true;\n      const { keyframes, options } = getAnimation(this, \"dropdown.show\", { dir: this.localize.dir() });\n      await animateTo(this.popup.popup, keyframes, options);\n      this.emit(\"sl-after-show\");\n    } else {\n      this.emit(\"sl-hide\");\n      this.removeOpenListeners();\n      await stopAnimations(this);\n      const { keyframes, options } = getAnimation(this, \"dropdown.hide\", { dir: this.localize.dir() });\n      await animateTo(this.popup.popup, keyframes, options);\n      this.panel.hidden = true;\n      this.popup.active = false;\n      this.emit(\"sl-after-hide\");\n    }\n  }\n  render() {\n    return y`\n      <sl-popup\n        part=\"base\"\n        id=\"dropdown\"\n        placement=${this.placement}\n        distance=${this.distance}\n        skidding=${this.skidding}\n        strategy=${this.hoist ? \"fixed\" : \"absolute\"}\n        flip\n        shift\n        auto-size=\"vertical\"\n        auto-size-padding=\"10\"\n        class=${o({\n      dropdown: true,\n      \"dropdown--open\": this.open\n    })}\n      >\n        <slot\n          name=\"trigger\"\n          slot=\"anchor\"\n          part=\"trigger\"\n          class=\"dropdown__trigger\"\n          @click=${this.handleTriggerClick}\n          @keydown=${this.handleTriggerKeyDown}\n          @keyup=${this.handleTriggerKeyUp}\n          @slotchange=${this.handleTriggerSlotChange}\n        ></slot>\n\n        <slot\n          part=\"panel\"\n          class=\"dropdown__panel\"\n          aria-hidden=${this.open ? \"false\" : \"true\"}\n          aria-labelledby=\"dropdown\"\n        ></slot>\n      </sl-popup>\n    `;\n  }\n};\nSlDropdown.styles = dropdown_styles_default;\n__decorateClass([\n  i(\".dropdown\")\n], SlDropdown.prototype, \"popup\", 2);\n__decorateClass([\n  i(\".dropdown__trigger\")\n], SlDropdown.prototype, \"trigger\", 2);\n__decorateClass([\n  i(\".dropdown__panel\")\n], SlDropdown.prototype, \"panel\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlDropdown.prototype, \"open\", 2);\n__decorateClass([\n  e2({ reflect: true })\n], SlDropdown.prototype, \"placement\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlDropdown.prototype, \"disabled\", 2);\n__decorateClass([\n  e2({ attribute: \"stay-open-on-select\", type: Boolean, reflect: true })\n], SlDropdown.prototype, \"stayOpenOnSelect\", 2);\n__decorateClass([\n  e2({ attribute: false })\n], SlDropdown.prototype, \"containingElement\", 2);\n__decorateClass([\n  e2({ type: Number })\n], SlDropdown.prototype, \"distance\", 2);\n__decorateClass([\n  e2({ type: Number })\n], SlDropdown.prototype, \"skidding\", 2);\n__decorateClass([\n  e2({ type: Boolean })\n], SlDropdown.prototype, \"hoist\", 2);\n__decorateClass([\n  watch(\"open\", { waitUntilFirstUpdate: true })\n], SlDropdown.prototype, \"handleOpenChange\", 1);\nSlDropdown = __decorateClass([\n  e(\"sl-dropdown\")\n], SlDropdown);\nsetDefaultAnimation(\"dropdown.show\", {\n  keyframes: [\n    { opacity: 0, scale: 0.9 },\n    { opacity: 1, scale: 1 }\n  ],\n  options: { duration: 100, easing: \"ease\" }\n});\nsetDefaultAnimation(\"dropdown.hide\", {\n  keyframes: [\n    { opacity: 1, scale: 1 },\n    { opacity: 0, scale: 0.9 }\n  ],\n  options: { duration: 100, easing: \"ease\" }\n});\n\nexport {\n  SlDropdown\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/menu-item/menu-item.styles.ts\nvar menu_item_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    display: block;\n  }\n\n  :host([inert]) {\n    display: none;\n  }\n\n  .menu-item {\n    position: relative;\n    display: flex;\n    align-items: stretch;\n    font-family: var(--sl-font-sans);\n    font-size: var(--sl-font-size-medium);\n    font-weight: var(--sl-font-weight-normal);\n    line-height: var(--sl-line-height-normal);\n    letter-spacing: var(--sl-letter-spacing-normal);\n    color: var(--sl-color-neutral-700);\n    padding: var(--sl-spacing-2x-small) var(--sl-spacing-2x-small);\n    transition: var(--sl-transition-fast) fill;\n    user-select: none;\n    white-space: nowrap;\n    cursor: pointer;\n  }\n\n  .menu-item.menu-item--disabled {\n    outline: none;\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .menu-item .menu-item__label {\n    flex: 1 1 auto;\n    display: inline-block;\n  }\n\n  .menu-item .menu-item__prefix {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n  }\n\n  .menu-item .menu-item__prefix::slotted(*) {\n    margin-inline-end: var(--sl-spacing-x-small);\n  }\n\n  .menu-item .menu-item__suffix {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n  }\n\n  .menu-item .menu-item__suffix::slotted(*) {\n    margin-inline-start: var(--sl-spacing-x-small);\n  }\n\n  :host(:focus-visible) {\n    outline: none;\n  }\n\n  :host(:hover:not([aria-disabled='true'])) .menu-item {\n    background-color: var(--sl-color-neutral-100);\n    color: var(--sl-color-neutral-1000);\n  }\n\n  :host(:focus-visible) .menu-item {\n    outline: none;\n    background-color: var(--sl-color-primary-600);\n    color: var(--sl-color-neutral-0);\n    opacity: 1;\n  }\n\n  .menu-item .menu-item__check,\n  .menu-item .menu-item__chevron {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 1.5em;\n    visibility: hidden;\n  }\n\n  .menu-item--checked .menu-item__check,\n  .menu-item--has-submenu .menu-item__chevron {\n    visibility: visible;\n  }\n\n  @media (forced-colors: active) {\n    :host(:hover:not([aria-disabled='true'])) .menu-item,\n    :host(:focus-visible) .menu-item {\n      outline: dashed 1px SelectedItem;\n      outline-offset: -1px;\n    }\n  }\n`;\n\nexport {\n  menu_item_styles_default\n};\n","import {\n  menu_item_styles_default\n} from \"./chunk.62GDJLTG.js\";\nimport {\n  getTextContent\n} from \"./chunk.3IYPB6RR.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  watch\n} from \"./chunk.VQ3XOPCT.js\";\nimport {\n  ShoelaceElement,\n  e,\n  e2,\n  i\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/menu-item/menu-item.ts\nvar SlMenuItem = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.type = \"normal\";\n    this.checked = false;\n    this.value = \"\";\n    this.disabled = false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.handleHostClick = this.handleHostClick.bind(this);\n    this.addEventListener(\"click\", this.handleHostClick);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener(\"click\", this.handleHostClick);\n  }\n  handleDefaultSlotChange() {\n    const textLabel = this.getTextLabel();\n    if (typeof this.cachedTextLabel === \"undefined\") {\n      this.cachedTextLabel = textLabel;\n      return;\n    }\n    if (textLabel !== this.cachedTextLabel) {\n      this.cachedTextLabel = textLabel;\n      this.emit(\"slotchange\", { bubbles: true, composed: false, cancelable: false });\n    }\n  }\n  handleHostClick(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n  handleCheckedChange() {\n    if (this.checked && this.type !== \"checkbox\") {\n      this.checked = false;\n      console.error('The checked attribute can only be used on menu items with type=\"checkbox\"', this);\n      return;\n    }\n    if (this.type === \"checkbox\") {\n      this.setAttribute(\"aria-checked\", this.checked ? \"true\" : \"false\");\n    } else {\n      this.removeAttribute(\"aria-checked\");\n    }\n  }\n  handleDisabledChange() {\n    this.setAttribute(\"aria-disabled\", this.disabled ? \"true\" : \"false\");\n  }\n  handleTypeChange() {\n    if (this.type === \"checkbox\") {\n      this.setAttribute(\"role\", \"menuitemcheckbox\");\n      this.setAttribute(\"aria-checked\", this.checked ? \"true\" : \"false\");\n    } else {\n      this.setAttribute(\"role\", \"menuitem\");\n      this.removeAttribute(\"aria-checked\");\n    }\n  }\n  /** Returns a text label based on the contents of the menu item's default slot. */\n  getTextLabel() {\n    return getTextContent(this.defaultSlot);\n  }\n  render() {\n    return y`\n      <div\n        part=\"base\"\n        class=${o({\n      \"menu-item\": true,\n      \"menu-item--checked\": this.checked,\n      \"menu-item--disabled\": this.disabled,\n      \"menu-item--has-submenu\": false\n      // reserved for future use\n    })}\n      >\n        <span part=\"checked-icon\" class=\"menu-item__check\">\n          <sl-icon name=\"check\" library=\"system\" aria-hidden=\"true\"></sl-icon>\n        </span>\n\n        <slot name=\"prefix\" part=\"prefix\" class=\"menu-item__prefix\"></slot>\n\n        <slot part=\"label\" class=\"menu-item__label\" @slotchange=${this.handleDefaultSlotChange}></slot>\n\n        <slot name=\"suffix\" part=\"suffix\" class=\"menu-item__suffix\"></slot>\n\n        <span class=\"menu-item__chevron\">\n          <sl-icon name=\"chevron-right\" library=\"system\" aria-hidden=\"true\"></sl-icon>\n        </span>\n      </div>\n    `;\n  }\n};\nSlMenuItem.styles = menu_item_styles_default;\n__decorateClass([\n  i(\"slot:not([name])\")\n], SlMenuItem.prototype, \"defaultSlot\", 2);\n__decorateClass([\n  i(\".menu-item\")\n], SlMenuItem.prototype, \"menuItem\", 2);\n__decorateClass([\n  e2()\n], SlMenuItem.prototype, \"type\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlMenuItem.prototype, \"checked\", 2);\n__decorateClass([\n  e2()\n], SlMenuItem.prototype, \"value\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlMenuItem.prototype, \"disabled\", 2);\n__decorateClass([\n  watch(\"checked\")\n], SlMenuItem.prototype, \"handleCheckedChange\", 1);\n__decorateClass([\n  watch(\"disabled\")\n], SlMenuItem.prototype, \"handleDisabledChange\", 1);\n__decorateClass([\n  watch(\"type\")\n], SlMenuItem.prototype, \"handleTypeChange\", 1);\nSlMenuItem = __decorateClass([\n  e(\"sl-menu-item\")\n], SlMenuItem);\n\nexport {\n  SlMenuItem\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/menu/menu.styles.ts\nvar menu_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    display: block;\n    position: relative;\n    background: var(--sl-panel-background-color);\n    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);\n    border-radius: var(--sl-border-radius-medium);\n    padding: var(--sl-spacing-x-small) 0;\n    overflow: auto;\n    overscroll-behavior: none;\n  }\n\n  ::slotted(sl-divider) {\n    --spacing: var(--sl-spacing-x-small);\n  }\n`;\n\nexport {\n  menu_styles_default\n};\n","import {\n  menu_styles_default\n} from \"./chunk.WGZQDQP2.js\";\nimport {\n  ShoelaceElement,\n  e,\n  i\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/menu/menu.ts\nvar SlMenu = class extends ShoelaceElement {\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"menu\");\n  }\n  handleClick(event) {\n    const target = event.target;\n    const item = target.closest(\"sl-menu-item\");\n    if (!item || item.disabled || item.inert) {\n      return;\n    }\n    if (item.type === \"checkbox\") {\n      item.checked = !item.checked;\n    }\n    this.emit(\"sl-select\", { detail: { item } });\n  }\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const item = this.getCurrentItem();\n      event.preventDefault();\n      item == null ? void 0 : item.click();\n    }\n    if (event.key === \" \") {\n      event.preventDefault();\n    }\n    if ([\"ArrowDown\", \"ArrowUp\", \"Home\", \"End\"].includes(event.key)) {\n      const items = this.getAllItems();\n      const activeItem = this.getCurrentItem();\n      let index = activeItem ? items.indexOf(activeItem) : 0;\n      if (items.length > 0) {\n        event.preventDefault();\n        if (event.key === \"ArrowDown\") {\n          index++;\n        } else if (event.key === \"ArrowUp\") {\n          index--;\n        } else if (event.key === \"Home\") {\n          index = 0;\n        } else if (event.key === \"End\") {\n          index = items.length - 1;\n        }\n        if (index < 0) {\n          index = items.length - 1;\n        }\n        if (index > items.length - 1) {\n          index = 0;\n        }\n        this.setCurrentItem(items[index]);\n        items[index].focus();\n      }\n    }\n  }\n  handleMouseDown(event) {\n    const target = event.target;\n    if (this.isMenuItem(target)) {\n      this.setCurrentItem(target);\n    }\n  }\n  handleSlotChange() {\n    const items = this.getAllItems();\n    if (items.length > 0) {\n      this.setCurrentItem(items[0]);\n    }\n  }\n  isMenuItem(item) {\n    var _a;\n    return item.tagName.toLowerCase() === \"sl-menu-item\" || [\"menuitem\", \"menuitemcheckbox\", \"menuitemradio\"].includes((_a = item.getAttribute(\"role\")) != null ? _a : \"\");\n  }\n  /** @internal Gets all slotted menu items, ignoring dividers, headers, and other elements. */\n  getAllItems() {\n    return [...this.defaultSlot.assignedElements({ flatten: true })].filter((el) => {\n      if (el.inert || !this.isMenuItem(el)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  /**\n   * @internal Gets the current menu item, which is the menu item that has `tabindex=\"0\"` within the roving tab index.\n   * The menu item may or may not have focus, but for keyboard interaction purposes it's considered the \"active\" item.\n   */\n  getCurrentItem() {\n    return this.getAllItems().find((i2) => i2.getAttribute(\"tabindex\") === \"0\");\n  }\n  /**\n   * @internal Sets the current menu item to the specified element. This sets `tabindex=\"0\"` on the target element and\n   * `tabindex=\"-1\"` to all other items. This method must be called prior to setting focus on a menu item.\n   */\n  setCurrentItem(item) {\n    const items = this.getAllItems();\n    items.forEach((i2) => {\n      i2.setAttribute(\"tabindex\", i2 === item ? \"0\" : \"-1\");\n    });\n  }\n  render() {\n    return y`\n      <slot\n        @slotchange=${this.handleSlotChange}\n        @click=${this.handleClick}\n        @keydown=${this.handleKeyDown}\n        @mousedown=${this.handleMouseDown}\n      ></slot>\n    `;\n  }\n};\nSlMenu.styles = menu_styles_default;\n__decorateClass([\n  i(\"slot\")\n], SlMenu.prototype, \"defaultSlot\", 2);\nSlMenu = __decorateClass([\n  e(\"sl-menu\")\n], SlMenu);\n\nexport {\n  SlMenu\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/skeleton/skeleton.styles.ts\nvar skeleton_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    --border-radius: var(--sl-border-radius-pill);\n    --color: var(--sl-color-neutral-200);\n    --sheen-color: var(--sl-color-neutral-300);\n\n    display: block;\n    position: relative;\n  }\n\n  .skeleton {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    min-height: 1rem;\n  }\n\n  .skeleton__indicator {\n    flex: 1 1 auto;\n    background: var(--color);\n    border-radius: var(--border-radius);\n  }\n\n  .skeleton--sheen .skeleton__indicator {\n    background: linear-gradient(270deg, var(--sheen-color), var(--color), var(--color), var(--sheen-color));\n    background-size: 400% 100%;\n    background-size: 400% 100%;\n    animation: sheen 8s ease-in-out infinite;\n  }\n\n  .skeleton--pulse .skeleton__indicator {\n    animation: pulse 2s ease-in-out 0.5s infinite;\n  }\n\n  /* Forced colors mode */\n  @media (forced-colors: active) {\n    :host {\n      --color: GrayText;\n    }\n  }\n\n  @keyframes sheen {\n    0% {\n      background-position: 200% 0;\n    }\n    to {\n      background-position: -200% 0;\n    }\n  }\n\n  @keyframes pulse {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.4;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport {\n  skeleton_styles_default\n};\n","import {\n  skeleton_styles_default\n} from \"./chunk.MQ7QFCHP.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  ShoelaceElement,\n  e,\n  e2\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/skeleton/skeleton.ts\nvar SlSkeleton = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.effect = \"none\";\n  }\n  render() {\n    return y`\n      <div\n        part=\"base\"\n        class=${o({\n      skeleton: true,\n      \"skeleton--pulse\": this.effect === \"pulse\",\n      \"skeleton--sheen\": this.effect === \"sheen\"\n    })}\n      >\n        <div part=\"indicator\" class=\"skeleton__indicator\"></div>\n      </div>\n    `;\n  }\n};\nSlSkeleton.styles = skeleton_styles_default;\n__decorateClass([\n  e2()\n], SlSkeleton.prototype, \"effect\", 2);\nSlSkeleton = __decorateClass([\n  e(\"sl-skeleton\")\n], SlSkeleton);\n\nexport {\n  SlSkeleton\n};\n"],"names":[],"sourceRoot":""}